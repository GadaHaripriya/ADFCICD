{
	"name": "pl_adf_master_source_raw_prestage_stage",
	"properties": {
		"activities": [
			{
				"name": "fe_MainControlTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lk_tbl_Triggertable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lk_tbl_Triggertable').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "sw_fileformat",
							"description": "check the file type and switch and copy the data from source to raw accordingly",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "sv_filename",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@if(\n endswith(string(item().FileName),'csv'),\n'csv',\nif(\n    endswith(string(item().FileName),'pdf'),\n    'pdf',\nif(\n    endswith(string(item().FileName),'xml'),\n    'xml',\n    'xlsx'\n    )\n  )\n  )",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "csv",
										"activities": [
											{
												"name": "cp_source_raw_csv",
												"description": "Copying the File from Source to Raw with defined Folder structure -Dynamically.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeEnd": {
																"value": "@pipeline().parameters.PipelineStartTime",
																"type": "Expression"
															},
															"wildcardFolderPath": {
																"value": "@concat(item().CustomerName,'/',item().CustomerNumber,'/OrderFiles')",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_adls_source_csv",
														"type": "DatasetReference",
														"parameters": {
															"foldername": {
																"value": "@item().CustomerName",
																"type": "Expression"
															},
															"IsCSVHeaderAvailable": {
																"value": "@item().IsCSVHeaderAvailable",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adls_raw_csv",
														"type": "DatasetReference",
														"parameters": {
															"source_folder": {
																"value": "@item().CustomerName",
																"type": "Expression"
															},
															"filetype": "csv",
															"year": {
																"value": "@pipeline().parameters.Year",
																"type": "Expression"
															},
															"month": {
																"value": "@pipeline().parameters.Month",
																"type": "Expression"
															},
															"Customernumber": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"week": {
																"value": "@pipeline().parameters.week",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "expl_raw_prestage_csv",
												"description": "copy data from raw to pretstage",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "cp_source_raw_csv",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_adf_raw_prestage_stage_csv",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"source_folder": {
															"value": "@item().CustomerName",
															"type": "Expression"
														},
														"Filetype": "csv",
														"Filename": {
															"value": "@item().FileName",
															"type": "Expression"
														},
														"CSVColumnMapping": {
															"value": "@item().CSVColumnMapping",
															"type": "Expression"
														},
														"Year": {
															"value": "@pipeline().parameters.Year",
															"type": "Expression"
														},
														"Month": {
															"value": "@pipeline().parameters.Month",
															"type": "Expression"
														},
														"week": {
															"value": "@pipeline().parameters.week",
															"type": "Expression"
														},
														"Customernumber": {
															"value": "@item().CustomerNumber",
															"type": "Expression"
														},
														"TriggerID": {
															"value": "@item().TID",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "sp_auditlogs-source_raw_success_csv",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_csv",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": null,
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_csv').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "csv",
															"type": "String"
														},
														"Status": {
															"value": "success",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_auditlogs-source_raw_failure",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_csv",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": {
																"value": "@activity('cp_source_raw_csv').output.error",
																"type": "Expression"
															},
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_csv').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "csv",
															"type": "String"
														},
														"Status": {
															"value": "failure",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_update_Triggertable_csv",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "expl_raw_prestage_csv",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_Triggertable_Update]",
													"storedProcedureParameters": {
														"FileName": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"Pipeline_starttime": {
															"value": {
																"value": "@pipeline().parameters.Pipelinestarttime",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											}
										]
									},
									{
										"value": "pdf",
										"activities": [
											{
												"name": "cp_source_raw_pdf",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@concat(item().CustomerName,'/',item().CustomerNumber,'/OrderFiles')",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_adls_source_csv",
														"type": "DatasetReference",
														"parameters": {
															"foldername": {
																"value": "@item().CustomerName",
																"type": "Expression"
															},
															"IsCSVHeaderAvailable": "true"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adls_raw_csv",
														"type": "DatasetReference",
														"parameters": {
															"source_folder": {
																"value": "@item().CustomerName",
																"type": "Expression"
															},
															"filetype": "pdf",
															"year": {
																"value": "@pipeline().parameters.Year",
																"type": "Expression"
															},
															"month": {
																"value": "@pipeline().parameters.Month",
																"type": "Expression"
															},
															"Customernumber": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"week": {
																"value": "@pipeline().parameters.week",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "expl_master_raw_prestage_pdf",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "cp_source_raw_pdf",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_adf_master_raw_prestage_pdf",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"source_folder": {
															"value": "@item().CustomerName",
															"type": "Expression"
														},
														"Customerfolder": {
															"value": "@item().CustomerName",
															"type": "Expression"
														},
														"Pdfmapping": {
															"value": "@item().PDFMapping",
															"type": "Expression"
														},
														"FileName": {
															"value": "@item().FileName",
															"type": "Expression"
														},
														"FormRecognizerURL": {
															"value": "@concat('https://frc-aaa-dev-euw-1.cognitiveservices.azure.com/formrecognizer/documentModels/',item().FormRecogniserModelID,':analyze?api-version=2022-08-31')",
															"type": "Expression"
														},
														"FormRecognizerKey": {
															"value": "13dd1d54d2b045449b043cdc92ac6bb9",
															"type": "Expression"
														},
														"Year": {
															"value": "@pipeline().parameters.Year",
															"type": "Expression"
														},
														"Month": {
															"value": "@pipeline().parameters.Month",
															"type": "Expression"
														},
														"PipelineStartTime": {
															"value": "@pipeline().parameters.PipelineStartTime",
															"type": "Expression"
														},
														"Customernumber": {
															"value": "@item().CustomerNumber",
															"type": "Expression"
														},
														"week": {
															"value": "@pipeline().parameters.week",
															"type": "Expression"
														},
														"TriggerID": {
															"value": "@item().TID",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "sp_auditlogs-source_raw_success_pdf",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_pdf",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": null,
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_pdf').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "pdf",
															"type": "String"
														},
														"Status": {
															"value": "success",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_auditlogs-source_raw_failure_pdf",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_pdf",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": {
																"value": "@activity('cp_source_raw_pdf').output.error",
																"type": "Expression"
															},
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_pdf').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "pdf",
															"type": "String"
														},
														"Status": {
															"value": "failure",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_update_Triggertable_pdf",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "expl_master_raw_prestage_pdf",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_Triggertable_Update]",
													"storedProcedureParameters": {
														"FileName": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"Pipeline_starttime": {
															"value": {
																"value": "@pipeline().parameters.Pipelinestarttime",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											}
										]
									},
									{
										"value": "xml",
										"activities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									},
									{
										"value": "xlsx",
										"activities": [
											{
												"name": "cp_source_raw_xlsx",
												"description": "Copying the File from Source to Raw with defined Folder structure -Dynamically.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"modifiedDatetimeEnd": {
																"value": "@pipeline().parameters.PipelineStartTime",
																"type": "Expression"
															},
															"wildcardFolderPath": {
																"value": "@concat(item().CustomerName,'/',item().CustomerNumber,'/OrderFiles')",
																"type": "Expression"
															},
															"wildcardFileName": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_adls_source_xlsx",
														"type": "DatasetReference",
														"parameters": {
															"foldername": {
																"value": "@item().CustomerName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_adls_raw_xlsx",
														"type": "DatasetReference",
														"parameters": {
															"source_folder": {
																"value": "@item().CustomerName",
																"type": "Expression"
															},
															"filetype": "xlsx",
															"year": {
																"value": "@pipeline().parameters.Year",
																"type": "Expression"
															},
															"month": {
																"value": "@pipeline().parameters.Month",
																"type": "Expression"
															},
															"Customernumber": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"week": {
																"value": "@pipeline().parameters.week",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "expl_raw_prestage_xlsx",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "cp_source_raw_xlsx",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_adf_raw_prestage_stage_xlsx",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"source_folder": {
															"value": "@item().CustomerName\n",
															"type": "Expression"
														},
														"Filetype": "xlsx",
														"Filename": {
															"value": "@item().FileName",
															"type": "Expression"
														},
														"XLSXColumnMapping": {
															"value": "@item().XLSXColumnMapping",
															"type": "Expression"
														},
														"Year": {
															"value": "@pipeline().parameters.Year",
															"type": "Expression"
														},
														"Month": {
															"value": "@pipeline().parameters.Month",
															"type": "Expression"
														},
														"Customernumber": {
															"value": "@item().CustomerNumber",
															"type": "Expression"
														},
														"week": {
															"value": "@pipeline().parameters.week",
															"type": "Expression"
														},
														"Pipelinestarttime": {
															"value": "@pipeline().parameters.Pipelinestarttime",
															"type": "Expression"
														},
														"TriggerID": {
															"value": "@item().TID",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "sp_auditlogs-source_raw_success_xlsx",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_xlsx",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": null,
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_xlsx').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "xlsx",
															"type": "String"
														},
														"Status": {
															"value": "success",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_auditlogs-source_raw_failure_xlsx",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "cp_source_raw_xlsx",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_AuditLogsSourceToRaw]",
													"storedProcedureParameters": {
														"CustomerNumber": {
															"value": {
																"value": "@item().CustomerNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"Errors": {
															"value": {
																"value": "@activity('cp_source_raw_xlsx').output.value.error",
																"type": "Expression"
															},
															"type": "String"
														},
														"Filename_at_Raw": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileNameatSource": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineEndTime": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"PipelineName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineRunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"PipelineStartTime": {
															"value": {
																"value": "@activity('cp_source_raw_xlsx').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"SourceFileType": {
															"value": "xlsx",
															"type": "String"
														},
														"Status": {
															"value": "failure",
															"type": "String"
														},
														"TriggerID": {
															"value": {
																"value": "@item().TID",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "sp_update_Triggertable_xlsx",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "expl_raw_prestage_xlsx",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[app].[usp_Triggertable_Update]",
													"storedProcedureParameters": {
														"FileName": {
															"value": {
																"value": "@item().FileName",
																"type": "Expression"
															},
															"type": "String"
														},
														"Pipeline_starttime": {
															"value": {
																"value": "@pipeline().parameters.Pipelinestarttime",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_sql_a4ltriplea",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "sv_filename",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Filename",
								"value": {
									"value": "@item().FileName\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "lk_tbl_Triggertable",
				"description": "Look up into control table -\n[app].[tbl_MainControlTable] for source folder name which is the customername",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select T.Id as TID,T.CustomerName as FolderName,max(Triggertime) as Triggertime,FileName,FileType,IsProcessed,T.CustomerNumber as TCustomerNumber,M.Id as MID,M.CustomerName as CustomerName,M.CustomerNumber as CustomerNumber,CSVColumnMapping,XLSXColumnMapping,PDFMapping,FormRecogniserModelID,ModifiedBy,ModifiedDate,PDFSourceColumns,PDFTargetColumns,CSVTargetColumns,CSVSourceColumns,XLSXSourceColumns,XLSXTargetColumns,FormRecogniserTableName,IsCSVHeaderAvailable,IsXLSXHeaderAvailable from [app].[tbl_TriggerTable] AS T left join [app].[tbl_MainControlTable] AS M on T.CustomerNumber=M.CustomerNumber where t.Triggertime< '@{pipeline().parameters.Pipelinestarttime}' and IsProcessed=0 and FileType='OrderFile' and PipelineEndTime is null GROUP BY T.ID,T.CustomerName,FileName,FileType,IsProcessed,T.CustomerNumber,M.ID,M.CustomerName,M.CustomerNumber,CSVColumnMapping,XLSXColumnMapping,PDFMapping,FormRecogniserModelID,ModifiedBy,ModifiedDate,PDFSourceColumns,PDFTargetColumns,CSVTargetColumns,CSVSourceColumns,XLSXSourceColumns,XLSXTargetColumns,FormRecogniserTableName,IsCSVHeaderAvailable,IsXLSXHeaderAvailable;\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_asql_maincontroltable",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "nb_startcluster",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Common_Functions/Common_Functions_DQ&DC"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Pipelinestarttime": {
				"type": "string"
			},
			"Year": {
				"type": "string"
			},
			"Month": {
				"type": "string"
			},
			"week": {
				"type": "string"
			}
		},
		"variables": {
			"PipelineStartTime": {
				"type": "String"
			},
			"Filename": {
				"type": "String"
			},
			"utcnow": {
				"type": "String"
			},
			"pipeline_starttime": {
				"type": "String"
			},
			"week": {
				"type": "String"
			},
			"time": {
				"type": "String"
			},
			"date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Final Pipeline/Child Pipelines/Child Pipelines Pre-UI/1.Ingestion Pipelines/Ingestion Master"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-07T14:47:06Z"
	}
}